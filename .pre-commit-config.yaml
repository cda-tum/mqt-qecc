# To run all pre-commit checks, use:
#
#     pre-commit run -a
#
# To install pre-commit hooks that run every time you commit:
#
#     pre-commit install
#

ci:
  autoupdate_commit_msg: "update pre-commit hooks"
  autofix_commit_msg: "pre-commit fixes"

repos:
  # Standard hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: "v4.4.0"
    hooks:
      - id: check-added-large-files
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-toml
      - id: check-yaml
      - id: debug-statements
      - id: end-of-file-fixer
      - id: mixed-line-ending
      - id: requirements-txt-fixer
      - id: trailing-whitespace

  # Handling unwanted unicode characters
  - repo: https://github.com/sirosen/texthooks
    rev: "0.4.0"
    hooks:
      - id: fix-ligatures
      - id: fix-smartquotes

  # Run Flake8 checks
  - repo: https://github.com/PyCQA/flake8
    rev: "6.0.0"
    hooks:
      - id: flake8
        additional_dependencies:
          - flake8-bugbear
          - flake8-comprehensions
          - flake8-future-annotations
          - flake8-new-union-types
          - flake8-simplify
          - flake8-use-pathlib
          - flake8-2020

  # Upgrade old Python syntax
  - repo: https://github.com/asottile/pyupgrade
    rev: "v3.3.1"
    hooks:
      - id: pyupgrade
        args: ["--py37-plus"]

  # Sort includes
  - repo: https://github.com/PyCQA/isort
    rev: "5.10.1"
    hooks:
      - id: isort

  # Run code formatting with Black
  - repo: https://github.com/psf/black
    rev: "22.12.0" # Keep in sync with blacken-docs
    hooks:
      - id: black

  # Also run Black on examples in the documentation
  - repo: https://github.com/asottile/blacken-docs
    rev: "v1.12.1"
    hooks:
      - id: blacken-docs
        additional_dependencies:
          - black==22.12.0 # keep in sync with black hook

  # Check for common mistakes
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: "v1.9.0"
    hooks:
      - id: python-check-blanket-noqa
      - id: python-check-blanket-type-ignore
      - id: python-no-log-warn
      - id: python-no-eval
      - id: python-use-type-annotations
      - id: rst-backticks
      - id: rst-directive-colons
      - id: rst-inline-touching-normal

  # Check the manifest for missing files
  - repo: https://github.com/mgedmin/check-manifest
    rev: "0.49"
    hooks:
      - id: check-manifest
        stages: [manual] # Only runs whenever ``--hook-stage manual`` is passed
        additional_dependencies: ["setuptools_scm[toml]", "cmake"]

  # Check static types with mypy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: "v0.991"
    hooks:
      - id: mypy
        stages: [manual]
        files: ^(mqt/qecc|test/python)
        args:
          [--no-strict-optional, --ignore-missing-imports, --no-warn-return-any]
        additional_dependencies: ["types-setuptools", "pytest>=7.0"]

  # Check for spelling
  - repo: https://github.com/codespell-project/codespell
    rev: "v2.2.2"
    hooks:
      - id: codespell
        args: ["-L", "wille,linz", "--skip", "*.ipynb"]

  # Clang-format the C++ part of the code base automatically
  - repo: https://github.com/pre-commit/mirrors-clang-format
    rev: "v15.0.4"
    hooks:
      - id: clang-format
        types_or: [c++, c, cuda]

  # CMake format and lint the CMakeLists.txt files
  - repo: https://github.com/cheshirekow/cmake-format-precommit
    rev: v0.6.13
    hooks:
      - id: cmake-format
        additional_dependencies: [pyyaml]
      - id: cmake-lint
        additional_dependencies: [pyyaml]

  # Format configuration files with prettier
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: "v3.0.0-alpha.4"
    hooks:
      - id: prettier
        types_or: [yaml, markdown, html, css, scss, javascript, json]
