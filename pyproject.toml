[build-system]
requires = [
    "setuptools>=61",
    "setuptools_scm[toml]>=7",
    "ninja>=1.10; sys_platform != 'win32'",
    "cmake>=3.19",
]
build-backend = "setuptools.build_meta"

[project]
name = "mqt.qecc"
description = "QECC - An MQT Tool for Quantum Error Correcting Codes"
readme = "README.md"
authors = [
    { name = "Lucas Berent", email = "lucas.berent@tum.de" },
    { name = "Lukas Burgholzer", email = "lukas.burgholzer@jku.at" },
    { name = "Peter-Jan H.S. Derks", email = "peter-janderks@hotmail.com" }
]
keywords = ["MQT", "quantum computing", "quantum error correction", "error-correcting codes", "decoding", "color codes", "MaxSAT", "QLDPC", "QEC", "Z3"]
license = { file = "LICENSE" }

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: C++",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)",
]
requires-python = ">=3.8"
dependencies = [
    "z3-solver~=4.11.0",
    "qecsim",
    "ldpc>=0.1.50",
    "numpy",
    # temporary workaround for a deprecation warning within qiskit-aer<=0.12.0 in combination with qiskit-terra>=0.24.0
    # once qiskit-aer>=0.12.1 is released, this can be removed completely
    # this should be triggered automatically by dependabot
    "qiskit-terra>=0.23.0,<0.24.0",
    "qiskit-aer>=0.12.0,<0.12.1",
]
dynamic = ["version"]

[project.optional-dependencies]
test = ["pytest>=7.2", "pytest-console-scripts>=1.3", "pytest-mock"]
coverage = ["mqt.qecc[test]", "pytest-cov"]
docs = [
    "sphinx>=5",
    "sphinx-rtd-theme",
    "sphinx-rtd-dark-mode",
    "sphinxcontrib-bibtex>=2.4.2",
    "sphinx-copybutton",
    "sphinx-hoverxref",
    "pybtex>=0.24",
    "importlib_metadata>=4.4; python_version < '3.10'",
    "ipython",
    "ipykernel",
    "nbsphinx",
    "sphinxext-opengraph",
    "qiskit-terra[visualization]",
]
visualization = ["matplotlib", "scipy"]
dev = ["mqt.qecc[coverage, docs, visualization]"]

[project.scripts]
"ecc_qiskit_wrapper" = "mqt.qecc.ecc_qiskit_wrapper:main"
"mqt.qecc.cc-decoder" = "mqt.qecc.cc_decoder.cli:cli"
"mqt.qecc.cc-decoder-plot" = "mqt.qecc.cc_decoder.plots:main"

[project.urls]
Homepage = "https://github.com/cda-tum/qecc"
Documentation = "https://github.com/cda-tum/qecc"
"Bug Tracker" = "https://github.com/cda-tum/qecc/issues"
Discussions = "https://github.com/cda-tum/qecc/discussions"

[tool.setuptools.packages.find]
include = ["mqt.*"]

[tool.setuptools_scm]

[tool.cibuildwheel]
build = "cp3*"
archs = "auto64"
skip = "*-musllinux*"
test-skip = "*-macosx_arm64 *-musllinux* *aarch64"
test-command = "python -c \"from mqt import qecc\""
environment = { DEPLOY = "ON" }
build-frontend = "build"
build-verbosity = 3
manylinux-x86_64-image = "manylinux_2_28"

[tool.cibuildwheel.linux]
before-all = [
    "yum -y install mpfr-devel",
    "git clone --branch v2.9.0 --depth 1 https://github.com/flintlib/flint2.git",
    "cd flint2 && ./configure && make -j 3 && make install"
]

[tool.cibuildwheel.macos]
archs = "x86_64"
environment = { MACOSX_DEPLOYMENT_TARGET = "10.15", DEPLOY = "ON" }

#[tool.cibuildwheel.windows] TODO
#before-build = "pip install delvewheel"
#repair-wheel-command = "delvewheel repair -v -w {dest_dir} {wheel}"
#environment = { DEPLOY = "ON", CC = "clang", CXX = "clang++", FLINT_ROOT = "/clang64" }

[tool.pytest.ini_options]
minversion = "7.2"
testpaths = ["test/python"]
addopts = ["-ra", "--strict-markers", "--strict-config", "--showlocals"]
log_cli_level = "INFO"
xfail_strict = true
filterwarnings = ["error",
]



[tool.coverage.run]
source = ["mqt.qecc"]

[tool.coverage.report]
show_missing = true
skip_empty = true
precision = 1

[tool.check-manifest]
ignore = [
    "docs/**",
    ".*",
    ".*/**",
    "noxfile.py"
]

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
src_paths = ["mqt/qecc", "test/python"]

[tool.mypy]
files = ["mqt/qecc", "test/python", "setup.py"]
python_version = "3.8"
strict = true
warn_unused_configs = true
check_untyped_defs = true
show_error_codes = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true
explicit_package_bases = true
pretty = true

[[tool.mypy.overrides]]
module = ["qiskit.*", "qiskit_aer.*", "qecsim.*" , "matplotlib.*", "scipy.*", "ldpc.*", "pytest_console_scripts.*", "z3.*"]
ignore_missing_imports = true

[tool.ruff]
select = [
    "E", "F", "W", # flake8
    "A", # flake8-builtins
    "ANN", # flake8-annotations
    "ARG", # flake8-unused-arguments
    "B", "B904", # flake8-bugbear
    "C4", # flake8-comprehensions
    "D", # pydocstyle
    "EM", # flake8-errmsg
    "EXE", # flake8-executable
    "I", # isort
    "ICN", # flake8-import-conventions
    "ISC", # flake8-implicit-str-concat
    "N", # flake8-naming
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PL", # pylint
    "PT", # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "PYI", # flake8-pyi
    "Q", # flake8-quotes
    "RET", # flake8-return
    "RSE", # flake8-raise
    "RUF", # Ruff-specific
    "SLF", # flake8-self
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "TRY", # tryceratops
    "UP", # pyupgrade
    "YTT", # flake8-2020
]
ignore = [
    "ANN101", # Missing type annotation for self in method
    "D203", # 1 blank line required before class docstring
    "D213", # Multi-line docstring summary should start at the second line
    "E501", # Line too long (Black is enough)
    "PLR2004", # Magic values
    "PLR0913", # Too many arguments
]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

line-length = 120
[tool.ruff.per-file-ignores]
"*.pyi" = [
    "D", # pydocstyle
]
