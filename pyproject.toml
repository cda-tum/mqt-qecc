[build-system]
requires = [
  "hatchling>=1.27.0",
  "hatch-vcs>=0.4.0"
]
build-backend = "hatchling.build"

[project]
name = "mqt.qecc"
description = "QECC - An MQT Tool for Quantum Error Correcting Codes"
readme = "README.md"
authors = [
    { name = "Lucas Berent", email = "lucas.berent@tum.de" },
    { name = "Lukas Burgholzer", email = "lukas.burgholzer@tum.de" },
    { name = "Peter-Jan H.S. Derks", email = "peter-janderks@hotmail.com" },
    { name = "Timo Hillmann", email = "timo.hillmann@rwth-aachen.de"},
    { name = "Tom Peham", email = "tom.peham@tum.de" },
    { name = "Ludwig Schmid", email = "ludwig.s.schmid@tum.de" },
]
keywords = ["MQT", "quantum-computing", "error-correction", "MaxSAT", "QLDPC"]
license = "MIT"
license-files = ["LICENSE.md"]

classifiers = [
    "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Development Status :: 5 - Production/Stable",
    "Typing :: Typed",
]
requires-python = ">=3.9"
dependencies = [
  "qiskit[qasm3-import]>=1.0.0",
  "numpy>=2.1; python_version >= '3.13'",
  "numpy>=1.26; python_version >= '3.12'",
  "numpy>=1.24.1",
  "numba>=0.61; python_version >= '3.13'",
  "numba>=0.59; python_version >= '3.12'",
  "numba>=0.57",
  "scipy>=1.15.2; python_version >= '3.10'",
  "scipy>=1.13.1",
  "z3-solver>=4.12.2",
  "multiprocess >= 0.70.17",
  "ldpc>=0.1.60,<2", # temporary upper cap due to failures seen with ldpc v2
  "stim >= 1.14.0",
  "pymatching>=2.2.2",
  "bposd>=1.6",
  "qecsim>=1.0b9",
  "qsample>=0.0.2",
  "urllib3>=2.3.0", # Required by qsample (to be removed)
  "fastcore>=1.8.1", # Required by qsample (to be removed)
]
dynamic = ["version"]

[tool.hatch.build.targets.wheel]
packages = ["src/mqt"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/mqt/qecc/_version.py"

[project.urls]
Homepage = "https://github.com/cda-tum/mqt-qecc"
Documentation = "https://mqt.readthedocs.io/projects/qecc"
Issues = "https://github.com/cda-tum/mqt-qecc/issues"
Discussions = "https://github.com/cda-tum/mqt-qecc/discussions"

[project.scripts]
"mqt.qecc.cc-decoder" = "mqt.qecc.cc_decoder.cli:cli"
"mqt.qecc.cc-decoder-plot" = "mqt.qecc.cc_decoder.plots:main"


[tool.pytest.ini_options]
minversion = "7.2"
testpaths = ["test/python"]
addopts = ["-ra", "--strict-markers", "--strict-config", "--showlocals"]
log_cli_level = "INFO"
xfail_strict = true
filterwarnings = [
  "error",
  "ignore:.*pkg_resources.*:DeprecationWarning:",
  "ignore:.*The retworkx package is deprecated*:DeprecationWarning:pymatching",
  'ignore:.*qiskit.providers.provider.Provider.*:DeprecationWarning:',
  'ignore::DeprecationWarning:.*(simpleeval).*',
  'ignore::RuntimeWarning:.*(qsample).*',
  'ignore:.*invalid escape sequence.*::.*qsample.*',
  'ignore:.*invalid escape sequence.*::.*latextools.*',
  # Qiskit 1.3 deprecations
  'ignore:.*``qiskit.dagcircuit.dagcircuit.DAGCircuit.*`` is deprecated as of qiskit 1.3.0.*:DeprecationWarning:',
  'ignore:.*``qiskit.circuit.instruction.Instruction.condition`` is deprecated as of qiskit 1.3.0.*:DeprecationWarning:',
  'ignore:.*Conditioned gates in qasm2 will be loaded as an IfElseOp starting in Qiskit 2.0.*:FutureWarning:',
  'ignore:.*``qiskit.circuit.singleton.*`` is deprecated as of qiskit 1.3.0.*:DeprecationWarning:',
  'ignore:.*``qiskit.circuit.instruction.Instruction.c_if.*`` is deprecated as of qiskit 1.3.0.*:DeprecationWarning:',
]

[tool.coverage]
run.source = ["mqt.qecc"]
report.exclude_also = [
  '\.\.\.',
  'if TYPE_CHECKING:',
  'raise AssertionError',
  'raise NotImplementedError',
  'def __dir__()',  # Ignore __dir__ method that exists mainly for better IDE support
  '@overload'  # Overloads are only for static typing
]


[tool.mypy]
files = ["src/mqt", "test/python", "noxfile.py"]
mypy_path = ["$MYPY_CONFIG_FILE_DIR/src"]
python_version = "3.9"
warn_unused_configs = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
strict = true
disallow_untyped_defs = false
explicit_package_bases = true
warn_unreachable = true
exclude = [
    "code_construction*",
    "^data_utils\\.py$"
]

[[tool.mypy.overrides]]
module = ["qiskit.*", "qecsim.*", "qiskit_aer.*", "matplotlib.*", "scipy.*", "ldpc.*", "pytest_console_scripts.*",
    "z3.*", "bposd.*", "numba.*", "pymatching.*", "stim.*", "multiprocess.*", "qsample.*", "pandas.*"]
ignore_missing_imports = true


[tool.check-wheel-contents]
ignore = ["W002"]  # Triggers on __init__.py's and duplicate data files


[tool.ruff]
line-length = 120
namespace-packages = ["mqt"]
preview = true
unsafe-fixes = true

[tool.ruff.lint]
extend-select = [
    "A",           # flake8-builtins
    "ANN",         # flake8-annotations
    "ARG",         # flake8-unused-arguments
    "ASYNC",       # flake8-async
    "B",  "B904",  # flake8-bugbear
    "C4",          # flake8-comprehensions
    "D",           # pydocstyle
    "EM",          # flake8-errmsg
    "EXE",         # flake8-executable
    "FA",          # flake8-future-annotations
    "FLY",         # flynt
    "FURB",        # refurb
    "I",           # isort
    "ICN",         # flake8-import-conventions
    "ISC",         # flake8-implicit-str-concat
    "LOG",         # flake8-logging-format
    "N",           # flake8-naming
    "NPY",         # numpy
    "PERF",        # perflint
    "PGH",         # pygrep-hooks
    "PIE",         # flake8-pie
    "PL",          # pylint
    "PT",          # flake8-pytest-style
    "PTH",         # flake8-use-pathlib
    "PYI",         # flake8-pyi
    "Q",           # flake8-quotes
    "RET",         # flake8-return
    "RSE",         # flake8-raise
    "RUF",         # Ruff-specific
    "S",           # flake8-bandit
    "SLF",         # flake8-self
    "SLOT",        # flake8-slots
    "SIM",         # flake8-simplify
    "T20",         # flake8-print
    "TC",          # flake8-type-checking
    "TID251",      # flake8-tidy-imports.banned-api
    "TRY",         # tryceratops
    "UP",          # pyupgrade
    "YTT",         # flake8-2020
]
ignore = [
    "ISC001",  # Conflicts with formatter
    "PLR09",   # Too many <...>
    "PLR2004", # Magic value used in comparison
    "PLC0415", # Import should be at top of file
    "S101",    # Use of assert detected
]
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"typing.Callable".msg = "Use collections.abc.Callable instead."
"typing.Iterator".msg = "Use collections.abc.Iterator instead."
"typing.Mapping".msg = "Use collections.abc.Mapping instead."
"typing.Sequence".msg = "Use collections.abc.Sequence instead."
"typing.Set".msg = "Use collections.abc.Set instead."

[tool.ruff.lint.per-file-ignores]
"test/python/**" = ["T20", "ANN"]
"docs/**" = ["T20"]
"noxfile.py" = ["T20", "TID251"]
"*.pyi" = ["D"]  # pydocstyle
"*.ipynb" = [
    "D",    # pydocstyle
    "E402", # Allow imports to appear anywhere in Jupyter notebooks
    "I002", # Allow missing `from __future__ import annotations` import
]
"*/cc_decoder/plots.py" = ["T201"]
"scripts/*" = ["T201"]

[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.typos]
[tool.typos.default.extend-words]
wille = "wille"
ser = "ser"
aer = "aer"
anc = "anc"


[tool.repo-review]
ignore = ["GH200"]


[tool.uv]
required-version = ">=0.5.20"
reinstall-package = ["mqt.qecc"]

[dependency-groups]
docs = [
  "furo>=2024.8.6",
  "setuptools-scm>=8.2",
  "sphinx-autoapi>=3.6.0",
  "sphinx-copybutton>=0.5.2",
  "sphinx-design>=0.6.1",
  "sphinxcontrib-bibtex>=2.6.3",
  "sphinxcontrib-svg2pdfconverter>=1.3.0",
  "sphinxext-opengraph>=0.10.0",
  "myst-nb>=1.2.0",
  "sphinx>=7.4.7",
  "sphinx>=8.1.3; python_version >= '3.10'",
  "sphinx>=8.2.3; python_version >= '3.11'",
  "qiskit[qasm3-import,visualization]>=1.0.0",
  "ipywidgets>=8.1.5",
]
test = [
  "pytest>=8.3.5",
  "pytest-console-scripts>=1.4.1",
  "pytest-cov>=6.1.1",
  "pytest-mock>=3.14.0",
]
dev = [
  {include-group = "docs"},
  {include-group = "test"},
]
