name: Python

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  FORCE_COLOR: 3

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  python-tests:
    name: üêç ${{ matrix.python-version }} Tests on ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        include:
          - runs-on: macos-13
            python-version: 3.8
          - runs-on: macos-13
            python-version: 3.11
          - runs-on: macos-13
            python-version: 3.12
          - runs-on: macos-14
            python-version: 3.8
          - runs-on: macos-14
            python-version: 3.11
          - runs-on: macos-14
            python-version: 3.12
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          prepend_symlinks_to_path: false
          override_cache_key: python-tests-${{ matrix.runs-on }}-${{ matrix.python-version }}
      - name: Install flint (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get install libflint-dev
      - name: Install flint (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install gmp mpfr
          git clone --branch v2.9.0 --depth 1 https://github.com/flintlib/flint2.git
          cd flint2
          ./configure --with-gmp=$(readlink -f $(brew --prefix gmp)) --with-mpfr=$(readlink -f $(brew --prefix mpfr))
          make -j 4
          make install
      # set up mold as linker for faster C++ builds (Linux only)
      - name: Set up mold as linker (Linux only)
        uses: rui314/setup-mold@v1
      # set up uv for faster Python package management
      - uses: yezz123/setup-uv@v4
      # set up nox for convenient testing
      - uses: wntrblm/nox@2024.04.15
        with:
          python-versions: ${{ matrix.python-version }}
      # run the nox minimums session (assumes a nox session named "minimums" exists) with coverage
      - name: Test on üêç ${{ matrix.python-version }} with minimal versions
        run: nox -s minimums-${{ matrix.python-version }} --verbose -- --cov --cov-report=xml:coverage-${{ matrix.python-version }}-${{ matrix.runs-on }}.xml
      # run the nox tests session (assumes a nox session named "tests" exists) with coverage
      - name: Test on üêç ${{ matrix.python-version }}
        run: nox -s tests-${{ matrix.python-version }} --verbose -- --cov --cov-report=xml:coverage-${{ matrix.python-version }}-${{ matrix.runs-on }}.xml --cov-append
      # upload the report as an artifact to GitHub so that it can later be uploaded to Codecov
      - name: Upload coverage report for üêç ${{ matrix.python-version }} on ${{ matrix.runs-on }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}-${{ matrix.runs-on }}
          path: coverage-*

  python-coverage-upload:
    name: üìà
    needs: [python-tests]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      # check out the repository (mostly for the codecov config)
      - uses: actions/checkout@v4
      # download coverage reports from all jobs
      - uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          path: coverage-reports
          merge-multiple: true
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          flags: python
          use_oidc: true
